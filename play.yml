---

- name: Setup sever
  hosts: all
  remote_user: ubuntu
  become: true

  tasks:
  - name: Upgrade system
    apt: upgrade=dist update_cache=yes

  - name: Add php repository
    apt_repository:
     repo: 'ppa:ondrej/php'

  - name: Install PHP
    apt: name=php8.1 state=latest

  - name: Install PHP MB
    apt: name=php8.1-mbstring state=latest 
    
  - name: Install PHP XML
    apt: name=php-xml state=latest

  - name: Install unzip
    apt: name=unzip state=latest

  - name: Download php-composer
    get_url:
      url: https://getcomposer.org/installer
      dest: /tmp/installer

  - name: install composer
    shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
    args:
      creates: /usr/local/bin/composer
   
  - name: renaming composer.phar to composer
    shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
    args:
      creates: /usr/local/bin/composer

  - name: make composer executable
    file:
      path: /usr/local/bin/composer
      mode: a+x
      state: file

  - name: install apache2 server
    apt:
      name: apache2
      state: present

  - name: install php curl
    shell: sudo apt-get install php-curl -y

  - name: install php 8.1 repositories
    shell: |
      apt install software-properties-common
      add-apt-repository ppa:ondrej/apache2 -y
      add-apt-repository ppa:ondrej/php -y
      apt-get -y install apt-transport-https lsb-release ca-certificates curl
      apt-get install apt-transport-https gnupg2 ca-certificates -y
      apt update -y
      apt install -y php8.1-common php8.1-cli -y

  - name: install LAMP stack
    apt:
        pkg:
          - php8.1-mysql
          - php8.1-curl
          - php8.1-cgi
          - php8.1-xsl
          - php8.1-gd
          - php8.1-mbstring
          - php8.1-zip
          - php8.1-xmlrpc
          - php8.1-soap
          - php8.1-intl
          - libapache2-mod-php
        state: present
        update_cache: yes

  - name: Installing Mysql and its dependencies
    package:
        name: "{{item}}"
        state: present
        update_cache: yes
    loop:
        - mysql-server
        - mysql-client 
        - python3-mysqldb
        - libmysqlclient-dev
    become: yes

  - name: start and enable mysql service
    service:
        name: mysql
        state: started
        enabled: yes
  
  - name: creating mysql user (medium_post)
    mysql_user:
        name: root
        password: root
        priv: '*.*:ALL'
        host: '%'
        state: present

  - name: creating medium_db
    mysql_db:
        name: laravel
        state: present  

  - name: Enable remote login to mysql
    lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        backup: yes
   
  - name: Restart mysql
    command: systemctl restart mysql

  - name: Copy pgsql script to remote server
    ansible.builtin.copy:
        src: /home/ubuntu/ansible/pgsql.sh
        dest: /home/ubuntu/pgsql.sh
        owner: ubuntu
        group: ubuntu
        mode: '0777'    

  - name: Execute pgsql script
    command: bash pgsql.sh
    ignore_errors: true

  - name: clone the laravel app codebase
    git:
       repo: https://github.com/f1amy/laravel-realworld-example-app.git
       dest: /var/www/html/theapp
         force=yes
         accept_hostkey=yes

  - name: copy lavarel repo
    shell: sudo mv -f /html/myapp /var/www/html/
    ignore_errors: true

  - name: Permission for composer Installation
    ansible.builtin.file:
       path: /var/www/html/theapp
       owner: ubuntu
       group: ubuntu
       mode: '0777'

  - name: Remove default web.php from routes
    shell: sudo rm -rf /var/www/html/theapp/routes/web.php
 
  
  - name: Create the web.php file in the routes directory
    ansible.builtin.copy:
         dest: /var/www/html/theapp/routes/web.php
         content: |
           <?php
 
           Route::get('/', function () {
               return view('welcome');
           });


  - name: "Composer  install"
    become: false
    composer:
        command: install
        global_command: false
        working_dir: /var/www/html/theapp
    environment:
        COMPOSER_ALLOW_SUPERUSER: "1"
        COMPOSER_NO_INTERACTION: "1"
    ignore_errors: true

  - name: Change Permissions
    shell: chown -R www-data:www-data /var/www/html/theapp/

  - name: Change permissions for storage
    shell: chmod -R 775 /var/www/html/theapp/storage

  - name: Create .env file for database
    template: 
        src=/home/ubuntu/ansible/laravel.env 
        dest=/var/www/html/theapp/.env

  - name: To Change artisan file permission
    shell: chmod 777 /var/www/html/theapp/artisan

  - name: To generate artisan key
    shell: php /var/www/html/theapp/artisan key:generate 
   
  - name: start mysql service
    service: name=mysql  state=restarted

  - name: install mysql driver
    shell: sudo apt-get install php-mysql -y

  - name: install sqlite
    shell: sudo apt-get install php-sqlite3 -y

  - name: update and upgrade
    shell: apt update && sudo apt upgrade -y

  - name: clear cache
    shell: php /var/www/html/theapp/artisan config:clear

  - name: run migration artisan migrate
    shell: php /var/www/html/theapp/artisan migrate
    ignore_errors:  true

  - name: run migration fresh
    shell: php /var/www/html/theapp/artisan migrate:fresh
    ignore_errors: true

  - name: run migration seed
    shell: php /var/www/html/theapp/artisan migrate --seed
    ignore_errors: true

  - name: run migration refresh
    shell: php /var/www/html/theapp/artisan migrate:refresh --seed
    ignore_errors: true

  - name: Remove default apache page
    file: name=/etc/apache2/sites-enabled/000-default.conf state=absent

  - name: Create an apache virtual host configuration file
    ansible.builtin.copy:
       dest: /etc/apache2/sites-available/rendered.conf
       content: |
           <VirtualHost *:80>
               ServerAdmin admin@44.201.162.223
               ServerName 44.201.162.223
               DocumentRoot /var/www/theapp/public
     
               <Directory /var/www/theapp/public>
                   AllowOverride All
               </Directory>
     
               ErrorLog ${APACHE_LOG_DIR}/error.log
               CustomLog ${APACHE_LOG_DIR}/access.log combined
           </VirtualHost>   

  - name: permission for laravel conf file
    shell: chmod -R 777 /etc/apache2/sites-available/rendered.conf

  - name: Disable default Apache2 configuration
    command: /etc/apache2/sites-available/000-default.conf a2dissite

  - name: Delete default Apache2 configuration
    command: rm -rf /etc/apache2/sites-available/000-default.conf

  - name: Enable Laravel Host configuration
    command: a2ensite rendered.conf

  - name: Enable the Apache rewrite module
    command:  a2enmod rewrite

  - name: Restart apache2
    command: systemctl restart apache2

  


  handlers:
  - name: start apache2
    service:
     state: started
     name: apache2

  - name: stop apache2
    service:
     state: stopped
     name: apache2 

  - name: restart apache2
    service:
     state: restarted
     name: apache2
     daemon_reload: yes

  - name: restart mysql
    service: 
     name: mysql
     state: restarted
